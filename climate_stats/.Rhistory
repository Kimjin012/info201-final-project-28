x=27
#Check that this is a comment x=42
new_x <- 7
x=42
x <- 7
x==7
print(x)
8%2
mod(8,2)
no_data_types_in_R <- "oh no its strings"
no_data_types_in_R <- x
no_data_types_in_R = TRUE
T | F
T && T
T && F
# Testing Doc
i_like_coffee <- TRUE
source('C:/Users/Noah Tran/UW/Info 201/Rfunctionstest.R')
source('C:/Users/Noah Tran/UW/Info 201/Rfunctionstest.R')
source('C:/Users/Noah Tran/UW/Info 201/Rfunctionstest.R')
source('C:/Users/Noah Tran/UW/Info 201/Rfunctionstest.R')
install.packages("lubridate")
5 %% 2
source('C:/Users/Noah Tran/UW/Info 201/Rfunctionstest.R')
evenOdd(5)
evenOdd(22)
evenOdd(sqrt(6))
source('C:/Users/Noah Tran/UW/Info 201/Rfunctionstest.R')
source('C:/Users/Noah Tran/UW/Info 201/Rfunctionstest.R')
source('C:/Users/Noah Tran/UW/Info 201/Rfunctionstest.R')
source('C:/Users/Noah Tran/UW/Info 201/Rfunctionstest.R')
source('C:/Users/Noah Tran/UW/Info 201/Rfunctionstest.R')
source('C:/Users/Noah Tran/UW/Info 201/Rfunctionstest.R')
source('C:/Users/Noah Tran/UW/Info 201/Rfunctionstest.R')
source('C:/Users/Noah Tran/UW/Info 201/Rfunctionstest.R')
source('C:/Users/Noah Tran/UW/Info 201/Rfunctionstest.R')
grepl("baka", "bbbaka")
source('C:/Users/Noah Tran/UW/Info 201/Rfunctionstest.R')
x <- 1
print(x)
x <- 1:1
print(x)
x <- 1
x <- 1:1
x <- 1:100
print(x)
lenght(x)
length(x)
x <- c(1:5, 10:15)
print(x)
print(x[-2])
print(x)
1:3 + 3
1:3 * 3
(1:3) * 3
(1:3) * 1:3
1:(1:3)
1:3 == 1:3
1:3 == (1:3 * 1:3)
size = 1:10
size[size > 4]
-5:5
nums = -5:5
print(nums[nums >= 0])
a <- vector("list", 3)
lapply(a, furntion(x){1:3})
lapply(a, furntion(x) 1:3)
lapply(a, funtion(x){1:3})
lapply(a, funtcion(x){1:3})
lapply(a, function(x){1:3})
install.packages("stringr")
load.package("stringr")
load.packages("stringr")
library()
library(stringr)
c("jeckk", "jekc")
print("yay")
print(c("check", "jeck"))
print(concat("check", "jeck"))
return("yay")
if (TRUE){return("yay")}
toupper("cheit")
tolower("chKLSDFIOd")
str_count("chiki briki", "b")
5^3
4^2
nums
nums[3:5]
p(nums, "check")
paste(nums, "check")
nums[1:3,5:6]
nums[-4]
length (nums)
mean(nums)
as.date()
library(lubridate)
as.Date()
as.Date("today")
as.Date(Sys.Date)
as.Date(Sys.time)
as.Date(%d)
as.Date(date())
as.Date(Sys.Date())
as.Date(July 20, 2019)
as.Date(7/20/2019)
as.Date(7-20-2019)
as.Date("7-20-2019")
as.Date("2019-7-20")
as.Date("2019/7/20")
as.Date("2019/7/20") -as.Date("2015/7/20")
365*4
fruits <- c("one apple", "two pears", "three bananas")
str_replace(fruits, "[aeiou]", "-")
str_replace(fruits, "*[aeiou]", "-")
str_replace(fruits, "aeiou", "-")
str_replace(fruits, "a/e/i/o/u", "-")
str_replace(fruits, "a/e/i/o|u", "-")
str_replace(fruits, "a|e|i|o|u", "-")
str_replace(fruits, "[aeiou]*", "-")
str_replace_all(fruits, "[aeiou]", "-")
str_detect(fruits, "[aeiou]")
str_detect(fruits, "[aeiou]", negate = FALSE)
source('C:/Users/Noah Tran/UW/Info 201/a2-basic-coding-noahtran/assignment.R')
source('C:/Users/Noah Tran/UW/Info 201/a2-basic-coding-noahtran/assignment.R')
source('C:/Users/Noah Tran/UW/Info 201/a2-basic-coding-noahtran/assignment.R')
source('C:/Users/Noah Tran/UW/Info 201/a2-basic-coding-noahtran/assignment.R')
source('C:/Users/Noah Tran/UW/Info 201/a2-basic-coding-noahtran/assignment.R')
source('C:/Users/Noah Tran/UW/Info 201/a2-basic-coding-noahtran/assignment.R')
seconds_in_year <- 60 * 60 * 24 * 365
print(seconds_in_year)
source('C:/Users/Noah Tran/UW/Info 201/a2-basic-coding-noahtran/assignment.R')
source('C:/Users/Noah Tran/UW/Info 201/a2-basic-coding-noahtran/assignment.R')
source('C:/Users/Noah Tran/UW/Info 201/a2-basic-coding-noahtran/assignment.R')
library(babynames)
packages.load(babynames)
install.packages(babynames)
install.packages("babynames")
library(babynames)
library(diplr)
library(dplyr)
install.packages("dplyr")
library(dplyr)
subset <- babynames[babynames$year == 1998]
subset <- babynames[babynames$year == 1998,]
print(subset[babynames$name == "Noah"])
print(subset[babynames$name == "Noah",])
print(subset[,babynames$name == "Noah"])
dim(subset)
i <- which.max(subset$n)
i
subset[i,]
subset[babynames$name == "Noah",]
subset <- subset[subset$sex == "M"]
subset <- subset[subset$sex == "M",]
subset <- babynames[babynames$year == 1998,]
subset <- subset[subset$sex == "F",]
i <- which.max(subset$n)
subset[i,]
head(select(babynames, year, sex, name))
head(select(babynames, -prop))
filter(babynames, name == "Noah")
filter(babynames, name == "Noah", year = "1998")
filter(babynames, name == "Noah", year == "1998")
filter(babynames, name == "Julia", year == "1998")
filter(babynames, name == "Jay", year == "1998")
filter(babynames, name == "Jay")
summarize(babynames, name == "Jay", n())
summarize(babynames, filter(name == "Jay"), n())
summarize(babynames, filter(babynames, name == "Jay"), n())
summarize(babynames, thing = filter(babynames, name == "Jay"), count = n())
filter(babynames, name == "Jay", year == "2017")
arrange(filter(babynames, year == 1998 & sex == "F"), desc(n))
arrange(babynames, desc(n))
arrange(babynames, asc(n))
arrange(babynames, ascd(n))
arrange(babynames, acnd(n))
2 %>% sqrt %>% print
babynames %>%  select(-prop) %>% print
babynames %>%  select(-prop) %>% filter(year == 1999 & sex = "F")
babynames %>%  select(-prop) %>% filter(year == 1999 & sex == "F")
babynames %>%  select(-prop) %>%
filter(year == 1999 & sex == "F") %>%
arrange(desc(n)) %>%
head
babynames %>%  select(-prop) %>%
filter(year == 1999 & sex == "F") %>%
arrange(desc(n)) %>%
head()
babynames %>%  select(-prop) %>%
filter(year == 2000 & sex == "F") %>%
arrange(desc(n)) %>%
head()
babynames %>%  select(-prop) %>%
filter(year == 1999 & sex == "F") %>%
filter(n < 100) %>%
arrange(desc(n)) %>%
head()
babynames %>%  select(-prop) %>%
filter(year == 1999 & sex == "F") %>%
filter(n < 1000) %>%
arrange(desc(n)) %>%
head()
babynames %>%  select(-prop) %>%
filter(year == 2000 & sex == "F") %>%
filter(n < 1000) %>%
arrange(desc(n)) %>%
head()
babynames %>%  select(-prop) %>%
filter(sex == "M") %>%
filter(n < 5) %>%
arrange(desc(n)) %>%
head()
babynames %>%  select(-prop) %>%
filter(sex == "M") %>%
filter(n <= 5) %>%
arrange(desc(n)) %>%
head()
babynames %>%  select(-prop) %>%
filter(n <= 5) %>%
arrange(desc(n)) %>%
head()
babynames %>%  select(-prop) %>%
filter(n <= 5) %>%
filter(year ==)2017) %>%
arrange(desc(n)) %>%
head()
babynames %>%  select(-prop) %>%
filter(n <= 5) %>%
filter(year == 2017) %>%
arrange(desc(n)) %>%
head()
babynames %>%  select(-prop) %>%
filter(n <= 5) %>%
filter(year == 2017) %>%
arrange(desc(n))
library("ggplot2", lib.loc="~/R/win-library/3.5")
library("magrittr", lib.loc="~/R/win-library/3.5")
library("dplyr", lib.loc="~/R/win-library/3.5")
Titanic
is.data.frame(Titanic)
titanic <- as.data.frame(Titanic)
titanic
library("babynames", lib.loc="~/R/win-library/3.5")
babynames
babynames %>% filter(name == "Ida")
ida <- babynames %>% filter(name == "Ida")
ida
ida <- babynames %>% filter(name == "Ida") %>% filter(sex == "F")
ida
ggplot(data=ida) + geom_point(mapping=aes(year, n))
babynames %>% filter(name == "Ida") %>%  ggplot() + geom_bar(aes(year, col=year))
babynames %>% filter(name == "Ida") %>%  ggplot() + geom_bar(aes(year, fill=year))
babynames %>% filter(name == "Ida") %>%  ggplot() + geom_bar(aes(year, fill=year))
babynames %>% filter(name == "Ida") %>%  ggplot() + geom_bar(aes(year, year))
babynames %>% filter(name == "Ida") %>%  ggplot() + geom_bar(aes(year, col=year))
babynames %>% filter(name == "Ida") %>%  ggplot() + geom_line(aes(x=year, y=n, col="blue"))
babynames %>% filter(name == "Ida") %>%  ggplot() + geom_bar(aes(year, fill=year))
babynames %>% filter(name == "Ida") %>% filter(year > 1950) %>%  ggplot() + geom_bar(aes(year, fill=year))
babynames %>% filter(name == "Ida") %>% filter(year > 1950) %>%  ggplot() + geom_bar(aes(year) fill=year)
babynames %>% filter(year > 1950) %>%  ggplot() + geom_bar(aes(name, col=name))
babynames %>% filter(year > 1950)
babynames %>% filter(year > 1950) %>% filter(n == max(n))
babynames %>% filter(year > 1950) %>% filter(n > 90000)
babynames %>% filter(year > 1950) %>% filter(n > 80000)
babynames %>% filter(year > 1950) %>% filter(n > 85000)
babynames %>% filter(year > 1950) %>% filter(n > 85000) %>% ggplot() + geom_bar(aes(name, col=name))
babynames %>% filter(year > 1950) %>% filter(n > 85000) %>% ggplot() + geom_bar(aes(name, fill=name))
shiny::runApp('C:/Users/Noah Tran/UW/Info 201/info201-final-project-28/climate_stats')
global_c02 <- read.csv(file = "../data/record_globe.csv", stringsAsFactors = FALSE, sep = ",")
global_other <- read.csv(file = "../data/global.1751_2014.csv", stringsAsFactors = FALSE, sep = ",")
runApp('C:/Users/Noah Tran/UW/Info 201/info201-final-project-28/climate_stats')
global_c02 <- read.csv(file = "data/record_globe.csv", stringsAsFactors = FALSE, sep = ",")
getwd()
setwd("C:/Users/Noah Tran/UW/Info 201/info201-final-project-28/climate_stats")
global_c02 <- read.csv(file = "../data/record_globe.csv", stringsAsFactors = FALSE, sep = ",")
global_other <- read.csv(file = "../data/global.1751_2014.csv", stringsAsFactors = FALSE, sep = ",")
View(global_other)
runApp()
runApp()
runApp()
colnames(global_other)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
colnames(global_other)
is.datatype(colnames(global_other))
is.list(colnames(global_other))
is.vector(colnames(global_other))
colnames(global_other) - "Year"
colnames(global_other)[-1]
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
global_other %>% filter(Year)
global_other %>% select(Year)
runApp()
runApp()
global_other[Total carbon emissions from fossil fuel consumption and cement production (million metric tons of C)]
global_other[`Total carbon emissions from fossil fuel consumption and cement production (million metric tons of C)`]
runApp()
runApp()
runApp()
global_other[1]
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
View(global_other)
global_other[2]
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
View(global_other)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
